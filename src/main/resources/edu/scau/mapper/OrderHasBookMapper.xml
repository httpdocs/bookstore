<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.scau.mapper.OrderHasBookMapper">
    <resultMap id="BaseResultMap" type="edu.scau.model.OrderHasBook">
        <id column="orderId" property="orderid" jdbcType="INTEGER"/>
        <id column="isbn" property="isbn" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="quantity" property="quantity" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    orderId, isbn, price, quantity
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.scau.model.OrderHasBookExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from order_has_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="pagination != null">
            limit #{pagination.begin} , #{pagination.length}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="edu.scau.model.OrderHasBookKey">
        select
        <include refid="Base_Column_List"/>
        from order_has_book
        where orderId = #{orderid,jdbcType=INTEGER}
        and isbn = #{isbn,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="edu.scau.model.OrderHasBookKey">
    delete from order_has_book
    where orderId = #{orderid,jdbcType=INTEGER}
      and isbn = #{isbn,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="edu.scau.model.OrderHasBookExample">
        delete from order_has_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="edu.scau.model.OrderHasBook">
    insert into order_has_book (orderId, isbn, price, 
      quantity)
    values (#{orderid,jdbcType=INTEGER}, #{isbn,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{quantity,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="edu.scau.model.OrderHasBook">
        insert into order_has_book
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderid != null">
                orderId,
            </if>
            <if test="isbn != null">
                isbn,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderid != null">
                #{orderid,jdbcType=INTEGER},
            </if>
            <if test="isbn != null">
                #{isbn,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="edu.scau.model.OrderHasBookExample" resultType="java.lang.Integer">
        select count(*) from order_has_book
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update order_has_book
        <set>
            <if test="record.orderid != null">
                orderId = #{record.orderid,jdbcType=INTEGER},
            </if>
            <if test="record.isbn != null">
                isbn = #{record.isbn,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.quantity != null">
                quantity = #{record.quantity,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update order_has_book
        set orderId = #{record.orderid,jdbcType=INTEGER},
        isbn = #{record.isbn,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=DECIMAL},
        quantity = #{record.quantity,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="edu.scau.model.OrderHasBook">
        update order_has_book
        <set>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
        </set>
        where orderId = #{orderid,jdbcType=INTEGER}
        and isbn = #{isbn,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="edu.scau.model.OrderHasBook">
    update order_has_book
    set price = #{price,jdbcType=DECIMAL},
      quantity = #{quantity,jdbcType=INTEGER}
    where orderId = #{orderid,jdbcType=INTEGER}
      and isbn = #{isbn,jdbcType=VARCHAR}
  </update>
</mapper>