<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.scau.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="edu.scau.model.Order">
        <id column="orderId" property="orderid" jdbcType="INTEGER"/>
        <result column="addressId" property="addressid" jdbcType="INTEGER"/>
        <result column="userId" property="userid" jdbcType="VARCHAR"/>
        <result column="total" property="total" jdbcType="DECIMAL"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="time" property="time" jdbcType="TIMESTAMP"/>
        <result column="comment" property="comment" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    orderId, addressId, userId, total, status, time, comment, remark
  </sql>
    <select id="selectLatestOrder" resultMap="BaseResultMap" parameterType="edu.scau.model.Order">
        select orderId, addressId, userId, total, status, time, comment, remark
        from `order`
            WHERE userid = #{userid}
            ORDER BY orderid DESC
            LIMIT #{offset},#{limit}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from order
        where orderId = #{orderid,jdbcType=INTEGER}
    </select>
  
    <delete id="deleteByExample" parameterType="edu.scau.model.OrderExample">
        delete from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="edu.scau.model.Order">
    insert into order (orderId, addressId, userId, 
      total, status, time, 
      comment, remark)
    values (#{orderid,jdbcType=INTEGER}, #{addressid,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, 
      #{total,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{comment,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="edu.scau.model.Order">
        insert into order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderid != null">
                orderId,
            </if>
            <if test="addressid != null">
                addressId,
            </if>
            <if test="userid != null">
                userId,
            </if>
            <if test="total != null">
                total,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="comment != null">
                comment,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderid != null">
                #{orderid,jdbcType=INTEGER},
            </if>
            <if test="addressid != null">
                #{addressid,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=VARCHAR},
            </if>
            <if test="total != null">
                #{total,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="edu.scau.model.OrderExample" resultType="java.lang.Integer">
        select count(*) from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update order
        <set>
            <if test="record.orderid != null">
                orderId = #{record.orderid,jdbcType=INTEGER},
            </if>
            <if test="record.addressid != null">
                addressId = #{record.addressid,jdbcType=INTEGER},
            </if>
            <if test="record.userid != null">
                userId = #{record.userid,jdbcType=VARCHAR},
            </if>
            <if test="record.total != null">
                total = #{record.total,jdbcType=DECIMAL},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.comment != null">
                comment = #{record.comment,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update order
        set orderId = #{record.orderid,jdbcType=INTEGER},
        addressId = #{record.addressid,jdbcType=INTEGER},
        userId = #{record.userid,jdbcType=VARCHAR},
        total = #{record.total,jdbcType=DECIMAL},
        status = #{record.status,jdbcType=INTEGER},
        time = #{record.time,jdbcType=TIMESTAMP},
        comment = #{record.comment,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="edu.scau.model.Order">
        update order
        <set>
            <if test="addressid != null">
                addressId = #{addressid,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                userId = #{userid,jdbcType=VARCHAR},
            </if>
            <if test="total != null">
                total = #{total,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="comment != null">
                comment = #{comment,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where orderId = #{orderid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="edu.scau.model.Order">
    update order
    set addressId = #{addressid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=VARCHAR},
      total = #{total,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      comment = #{comment,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>