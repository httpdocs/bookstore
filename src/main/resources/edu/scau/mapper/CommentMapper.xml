<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.scau.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="edu.scau.model.Comment">
        <id column="commentId" property="commentid" jdbcType="INTEGER"/>
        <result column="isbn" property="isbn" jdbcType="VARCHAR"/>
        <result column="userId" property="userid" jdbcType="VARCHAR"/>
        <result column="star" property="star" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="good" property="good" jdbcType="INTEGER"/>
        <result column="bad" property="bad" jdbcType="INTEGER"/>
        <result column="time" property="time" jdbcType="TIMESTAMP"/>
        <result column="reply_replyId" property="replyReplyid" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    commentId, isbn, userId, star, content, good, bad, time, reply_replyId
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.scau.model.CommentExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="pagination != null">
            limit #{pagination.begin} , #{pagination.length}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from comment
        where commentId = #{commentid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where commentId = #{commentid,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="edu.scau.model.CommentExample">
        delete from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="edu.scau.model.Comment">
    insert into comment (commentId, isbn, userId, 
      star, content, good, 
      bad, time, reply_replyId
      )
    values (#{commentid,jdbcType=INTEGER}, #{isbn,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, 
      #{star,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{good,jdbcType=INTEGER}, 
      #{bad,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{replyReplyid,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="edu.scau.model.Comment">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentid != null">
                commentId,
            </if>
            <if test="isbn != null">
                isbn,
            </if>
            <if test="userid != null">
                userId,
            </if>
            <if test="star != null">
                star,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="good != null">
                good,
            </if>
            <if test="bad != null">
                bad,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="replyReplyid != null">
                reply_replyId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentid != null">
                #{commentid,jdbcType=INTEGER},
            </if>
            <if test="isbn != null">
                #{isbn,jdbcType=VARCHAR},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=VARCHAR},
            </if>
            <if test="star != null">
                #{star,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="good != null">
                #{good,jdbcType=INTEGER},
            </if>
            <if test="bad != null">
                #{bad,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="replyReplyid != null">
                #{replyReplyid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="edu.scau.model.CommentExample" resultType="java.lang.Integer">
        select count(*) from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update comment
        <set>
            <if test="record.commentid != null">
                commentId = #{record.commentid,jdbcType=INTEGER},
            </if>
            <if test="record.isbn != null">
                isbn = #{record.isbn,jdbcType=VARCHAR},
            </if>
            <if test="record.userid != null">
                userId = #{record.userid,jdbcType=VARCHAR},
            </if>
            <if test="record.star != null">
                star = #{record.star,jdbcType=INTEGER},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.good != null">
                good = #{record.good,jdbcType=INTEGER},
            </if>
            <if test="record.bad != null">
                bad = #{record.bad,jdbcType=INTEGER},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.replyReplyid != null">
                reply_replyId = #{record.replyReplyid,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update comment
        set commentId = #{record.commentid,jdbcType=INTEGER},
        isbn = #{record.isbn,jdbcType=VARCHAR},
        userId = #{record.userid,jdbcType=VARCHAR},
        star = #{record.star,jdbcType=INTEGER},
        content = #{record.content,jdbcType=VARCHAR},
        good = #{record.good,jdbcType=INTEGER},
        bad = #{record.bad,jdbcType=INTEGER},
        time = #{record.time,jdbcType=TIMESTAMP},
        reply_replyId = #{record.replyReplyid,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="edu.scau.model.Comment">
        update comment
        <set>
            <if test="isbn != null">
                isbn = #{isbn,jdbcType=VARCHAR},
            </if>
            <if test="userid != null">
                userId = #{userid,jdbcType=VARCHAR},
            </if>
            <if test="star != null">
                star = #{star,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="good != null">
                good = #{good,jdbcType=INTEGER},
            </if>
            <if test="bad != null">
                bad = #{bad,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="replyReplyid != null">
                reply_replyId = #{replyReplyid,jdbcType=INTEGER},
            </if>
        </set>
        where commentId = #{commentid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="edu.scau.model.Comment">
    update comment
    set isbn = #{isbn,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=VARCHAR},
      star = #{star,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      good = #{good,jdbcType=INTEGER},
      bad = #{bad,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      reply_replyId = #{replyReplyid,jdbcType=INTEGER}
    where commentId = #{commentid,jdbcType=INTEGER}
  </update>
</mapper>